
skip PPC.CodeGen.cmmTopCodeGen
skip PPC.CodeGen.basicBlockCodeGen
skip PPC.CodeGen.stmtsToInstrs
skip PPC.CodeGen.stmtToInstrs
axiomatize definition PPC.CodeGen.getRegisterReg
skip PPC.CodeGen.jumpTableEntry
skip PPC.CodeGen.generateJumpTableForInstr

# not needed yet
skip PPC.CodeGen.genCCall
skip PPC.CodeGen.genCCall'
skip PPC.CodeGen.genBranch
skip PPC.CodeGen.genSwitch

# axiomatize for Hutton's Razor
axiomatize definition PPC.CodeGen.coerceFP2Int
axiomatize definition PPC.CodeGen.coerceInt2FP
axiomatize definition PPC.CodeGen.coerceInt2FP'
axiomatize definition PPC.CodeGen.condFltReg
axiomatize definition PPC.CodeGen.condFltCode
axiomatize definition PPC.CodeGen.condIntReg
axiomatize definition PPC.CodeGen.condIntCode
axiomatize definition PPC.CodeGen.shiftMulCode
axiomatize definition PPC.CodeGen.getAmode
axiomatize definition PPC.CodeGen.remainderCode
axiomatize definition PPC.CodeGen.trivialUCode
axiomatize definition PPC.CodeGen.trivialCodeNoImm
axiomatize definition PPC.CodeGen.trivialCodeNoImm'
axiomatize definition PPC.CodeGen.trivialCodeNoImmSign

# 64-bit operations for 32-bit platforms
skip PPC.CodeGen.getI64Amodes
skip PPC.CodeGen.assignMem_I64Code
skip PPC.CodeGen.assignReg_I64Code
axiomatize definition PPC.CodeGen.iselExpr64

# help coq with termination checking
# hs-to-coq cannot do termination annotations for mutual fixed points
# here is the error message:
# non-structural mutual recursion unsupported [in definitions PPC.CodeGen.getRegister', PPC.CodeGen.getSomeReg, PPC.CodeGen.getRegister, and PPC.CodeGen.trivialCode in module PPC.CodeGen]
# termination PPC.CodeGen.getRegister' { struct arg_1__ }


# skip some (many) cases in getRegister'
skip equation PPC.CodeGen.getRegister' dflags (CmmExpr.CmmLoad mem pk)
skip equation PPC.CodeGen.getRegister' dflags (CmmExpr.CmmMachOp mop (cons x nil))
skip equation PPC.CodeGen.getRegister' dflags (CmmExpr.Mk_CmmReg (CmmExpr.CmmGlobal CmmExpr.PicBaseReg))

# Punned
rename value PPC.CodeGen.CondCode=PPC.CodeGen.MkCondCode
rename value PPC.CodeGen.ChildCode64=PPC.CodeGen.MkChildCode64
rename value PPC.CodeGen.Amode=PPC.CodeGen.MkAmode
