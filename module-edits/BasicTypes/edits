# char constant
skip BasicTypes.negateFractionalLit

# needs show
skip BasicTypes.integralFractionalLit
skip BasicTypes.defaultFixity

skip BasicTypes.tupleParens
skip BasicTypes.maybeParen
skip BasicTypes.mkFractionalLit
skip BasicTypes.mkIntegralLit
skip BasicTypes.negateIntegralLit

skip BasicTypes.pprSafeOverlap
skip BasicTypes.pprRuleName
skip BasicTypes.pprOneShotInfo

# Unnecessary partial record accessors
#skip BasicTypes.occ_tail

# Eq implemented via Ord
skip BasicTypes.Eq___TyPrec
skip BasicTypes.Ord__TyPrec


##########

#
order BasicTypes.Eq___FractionalLit   BasicTypes.Ord__FractionalLit_compare  BasicTypes.Ord__FractionalLit_min
order BasicTypes.Eq___FixityDirection BasicTypes.Eq___Fixity_op_zeze__
order BasicTypes.Eq___IntWithInf      BasicTypes.Ord__IntWithInf
order BasicTypes.Eq___FunctionOrData  BasicTypes.Ord__FunctionOrData
order BasicTypes.Eq___IntegralLit     BasicTypes.Ord__IntegralLit
order BasicTypes.Eq___OverlapMode     BasicTypes.Eq___OverlapFlag_op_zeze__
order BasicTypes.Eq___Activation      BasicTypes.Eq___InlinePragma_op_zeze__
order BasicTypes.Eq___InlineSpec      BasicTypes.Eq___InlinePragma_op_zeze__
order BasicTypes.Eq___SourceText      BasicTypes.Eq___Activation_op_zeze__
order BasicTypes.Eq___SourceText      BasicTypes.Eq___WarningTxt_op_zeze__
order BasicTypes.Eq___SourceText      BasicTypes.Eq___OverlapMode_op_zeze__
order BasicTypes.Eq___TailCallInfo    BasicTypes.Eq___OccInfo_op_zeze__
order BasicTypes.Eq___StringLiteral   BasicTypes.Eq___WarningTxt_op_zeze__

redefine Definition BasicTypes.RepArity  := nat.
redefine Definition BasicTypes.PhaseNum  := nat.
redefine Definition BasicTypes.JoinArity := nat.
redefine Definition BasicTypes.Arity     := nat.


skip BasicTypes.pprAlternative
skip BasicTypes.Default__OverlapFlag
skip BasicTypes.Default__InlinePragma
